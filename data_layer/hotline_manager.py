class HotlineManager:
    def __init__(self):
        self.hotlines = {
            # Key ch√≠nh
            "qtmac": "0901 941 941",
            "npa_quang_binh": "1800 1741",
            "npa_quang_tri": "0901 941 941", 
            "npa_thua_thien_hue": "0988 796 120",
            
            # Th√™m c√°c key alternative
            "quang_binh": "1800 1741",
            "qb": "1800 1741",
            "quang_tri": "0901 941 941",
            "qt": "0901 941 941",
            "thua_thien_hue": "0988 796 120",
            "hue": "0988 796 120",
            "tth": "0988 796 120",
            
            # Th√™m c√°c bi·∫øn th·ªÉ c√≥ d·∫•u v√† kh√¥ng d·∫•u
            "qu·∫£ng_b√¨nh": "1800 1741",
            "qu·∫£ng_tr·ªã": "0901 941 941",
            "th·ª´a_thi√™n_hu·∫ø": "0988 796 120"
        }

    def get_hotline(self, location: str) -> str:
        # Normalize key - x·ª≠ l√Ω nhi·ªÅu tr∆∞·ªùng h·ª£p h∆°n
        key = location.lower().replace(" ", "_").replace("-", "_").replace(".", "")
        print(f"üîç Looking up hotline for key: '{key}'")
        
        # Ki·ªÉm tra tr·ª±c ti·∫øp
        if key in self.hotlines:
            return self.hotlines[key]
        
        # Fallback: ki·ªÉm tra partial match
        for hotline_key, number in self.hotlines.items():
            if hotline_key in key or key in hotline_key:
                return number
        
        return "Xin l·ªói, ch∆∞a c√≥ s·ªë hotline cho khu v·ª±c n√†y."